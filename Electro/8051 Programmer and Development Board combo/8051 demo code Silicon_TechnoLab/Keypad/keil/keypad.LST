C51 COMPILER V9.03   KEYPAD                                                                01/04/1980 00:47:25 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE KEYPAD
OBJECT MODULE PLACED IN keypad.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE keypad.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include<reg51.h> //Header file FOR 8051
   2          
   3          //Rows connected to lower 4-Bits of P1                     
   4          sbit R0 = P1^0;
   5          sbit R1 = P1^1;
   6          sbit R2 = P1^2;
   7          sbit R3 = P1^3;
   8          //Columns connected to higher 4-Bits of P1
   9          sbit C0 = P1^4;
  10          sbit C1 = P1^5;
  11          sbit C2 = P1^6;
  12          sbit C3 = P1^7;
  13          
  14          #define Keypad_Port P1 //keypad connected to P1
  15           /* function Prototype*/
  16          unsigned char Keypad_Scan(void);
  17          unsigned char Get_key(void);
  18          
  19          void main()
  20          {
  21   1        unsigned char Key_data;
  22   1        while(1)
  23   1        {
  24   2          Key_data = Get_key();
  25   2          P2 = Key_data;
  26   2        }
  27   1      }
  28          
  29          /*---------------------------------------------------------------------------------
  30                             void Keypad_Scan()
  31           ----------------------------------------------------------------------------------
  32           I/P Arguments: none
  33           Return value : Value of key pressed
  34           description  : This function is used for the rows and colums scan
  35          -----------------------------------------------------------------------------------*/                     
             - 
  36          unsigned char Keypad_Scan()
  37          {
  38   1      /*********************Scane Row0**************************/ 
  39   1        R0 = 0;  //Make ROW0 to low(0)
  40   1        R1=R2=R3=1;//Make All other Row to high(1)
  41   1        if(C0 == 0)//If Switch in columns0 is pressed
  42   1        {
  43   2            return 1;
  44   2            //return '1'; //for LCD
  45   2        }
  46   1        if(C1 == 0)//If Switch in columns1 is pressed
  47   1        {
  48   2           return 2;
  49   2            //return '2'; //for LCD
  50   2        }
  51   1        if(C2 == 0)//If Switch in columns2 is pressed
  52   1        {
  53   2            return 3;
  54   2          //return '3'; //for LCD
C51 COMPILER V9.03   KEYPAD                                                                01/04/1980 00:47:25 PAGE 2   

  55   2        }
  56   1        if(C3 == 0)//If Switch in columns3 is pressed
  57   1        {
  58   2            return 4;
  59   2            //return '4'; //for LCD
  60   2        }
  61   1        
  62   1      /*********************Scane Row1**************************/
  63   1        R1 = 0;  //Make ROW1 to low(0)
  64   1        R0=R2=R3=1;//Make All other Row to high(1)
  65   1        if(C0 == 0)//If Switch in columns0 is pressed
  66   1        {
  67   2          return 5;
  68   2            //return '5'; //for LCD
  69   2        }
  70   1        if(C1 == 0)//If Switch in columns1 is pressed
  71   1        {
  72   2          return 6;
  73   2            //return '6'; //for LCD
  74   2        }
  75   1        if(C2 == 0)//If Switch in columns2 is pressed
  76   1        {
  77   2          return 7;
  78   2            //return '7'; //for LCD
  79   2        }
  80   1        if(C3 == 0)//If Switch in columns3 is pressed
  81   1        {
  82   2          return 8;
  83   2            //return '8'; //for LCD
  84   2        }
  85   1      /*********************Scane Row2**************************/ 
  86   1        R2 = 0;  //Make ROW2 to low(0)
  87   1        R0=R1=R3=1;//Make All other Row to high(1)
  88   1        if(C0 == 0)//If Switch in columns0 is pressed
  89   1        {
  90   2          return 9;
  91   2            //return '9'; //for LCD
  92   2        }
  93   1        if(C1 == 0)//If Switch in columns1 is pressed
  94   1        {
  95   2          return 0;
  96   2            //return '0'; //for LCD
  97   2        }
  98   1        if(C2 == 0)//If Switch in columns2 is pressed
  99   1        {
 100   2          return 10;
 101   2            //return 'A'; //for LCD
 102   2        }
 103   1        if(C3 == 0)//If Switch in columns3 is pressed
 104   1        {
 105   2          return 11;
 106   2            //return 'B'; //for LCD 
 107   2        }
 108   1      /*********************Scane Row3**************************/   
 109   1        R3 = 0;  //Make ROW3 to low(0)
 110   1        R0=R1=R2=1;//Make All other Row to high(1)
 111   1        if(C0 == 0)//If Switch in columns0 is pressed
 112   1        {
 113   2           return 12;
 114   2            //return 'C'; //for LCD
 115   2        }
 116   1        if(C1 == 0)//If Switch in columns1 is pressed
C51 COMPILER V9.03   KEYPAD                                                                01/04/1980 00:47:25 PAGE 3   

 117   1        {
 118   2          return 13;
 119   2            //return 'D'; //for LCD
 120   2        }
 121   1        if(C2 == 0)//If Switch in columns2 is pressed
 122   1        {
 123   2          return 14;
 124   2            //return 'E'; //for LCD
 125   2        }
 126   1        if(C3 == 0)//If Switch in columns3 is pressed
 127   1        {
 128   2          return 15;
 129   2            //return 'F'; //for LCD
 130   2        }
 131   1        return '\0';
 132   1      }
 133          /*---------------------------------------------------------------------------------
 134                             void Keypad_Scan()
 135           ----------------------------------------------------------------------------------
 136           I/P Arguments: none
 137           Return value : Value of key
 138           description  : This function waits untill a key is pressed and retuns Value of key pressed
 139          -----------------------------------------------------------------------------------*/   
 140          unsigned char Get_key()
 141          {
 142   1        unsigned char Key_data;
 143   1        
 144   1        /*WaitForKeyRelease*/
 145   1          do
 146   1            {
 147   2              Keypad_Port=0xF0;                 // Set ROW lines to low(0) and Column lines to high(1).
 148   2              Key_data=Keypad_Port & 0xF0;      // Read the Columns and check the key press.
 149   2             }
 150   1           while(Key_data!=0xF0);                    // Wait untill the Key is released,
 151   1                                                // If no Key is pressed, Column lines will be High(0xF0) untill 
             -no key pressed.
 152   1                                                
 153   1         /*WaitForKeyPress*/
 154   1         do
 155   1         {
 156   2           do
 157   2            {
 158   3              Keypad_Port=0xF0;        // Set ROW lines to low(0) and Column lines to high(1).
 159   3              Key_data=Keypad_Port & 0xF0;   // Read the Columns, to check the key press
 160   3            }
 161   2            while(Key_data==0xF0); // Wait untill the Key is pressed,If no Key is pressed
 162   2                                // if a Key is pressed the corresponding Column line go low
 163   2      
 164   2             //to Confirm key is pressed
 165   2             Keypad_Port=0xF0;          // After some time, perform the above action to ensure the
 166   2             Key_data=Keypad_Port & 0xF0;    // the Key press.
 167   2          }while(Key_data==0xF0);
 168   1       
 169   1         Key_data =  Keypad_Scan();//// Scan for the key pressed.
 170   1         
 171   1         return Key_data;
 172   1      }
 173          
 174           


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.03   KEYPAD                                                                01/04/1980 00:47:25 PAGE 4   

   CODE SIZE        =    177    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
