C51 COMPILER V9.57.0.0   UART_COM_8051                                                     03/27/2018 20:26:51 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE UART_COM_8051
OBJECT MODULE PLACED IN .\Objects\uart com 8051.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE uart com 8051.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\uart com 8051.lst) TABS(2) OBJECT(.\Objects\uart com 8051.obj)

line level    source

   1          #include <reg51.h>                  
   2          //Function Prototype
   3          void Serial_Init(void);
   4          void Send_Byte(unsigned char);  
   5          char Receive_Byte(void);
   6          void Send_String_Serially(char String[]);
   7          
   8          void delay(unsigned int t){
   9   1        unsigned int i,j;
  10   1        for(i=0;i<1575;i++)
  11   1        for(j=0;j<t;j++);
  12   1      }
  13          
  14          
  15          void main()
  16          {
  17   1        P3=0x00;
  18   1        Serial_Init();  //Initialze Serial communication by calling Serial_Init() function
  19   1        EA = 1;//Enable Globle interrupt
  20   1        ES = 1;//Enable Serial interrupt
  21   1      //  Send_String_Serially("AT+UART_DEF=9600,8,1,0,0\r\n");
  22   1        //delay(500);
  23   1        Send_String_Serially("AT\r\n");
  24   1        delay(300);
  25   1        Send_String_Serially("ATE0\r\n");
  26   1        delay(300);
  27   1        Send_String_Serially("ATE+GMR\r\n");
  28   1        delay(300);
  29   1        Send_String_Serially("AT+CWMODE=1\r\n");
  30   1        delay(200);
  31   1        Send_String_Serially("AT+CWJAP=\"S\",\"123456789\"\r\n");
  32   1        
  33   1        delay(12000);
  34   1        
  35   1        Send_String_Serially("CIPMUX=1\r\n");
  36   1      
  37   1        delay(300);
  38   1        Send_String_Serially("AT+CIPSERVER=1,80\r\n");
  39   1        
  40   1        delay(300);
  41   1        Send_String_Serially("AT+CIPSTART=4,\"TCP\",\"184.106.153.149\",80\r\n");
  42   1      
  43   1        delay(800);
  44   1        Send_String_Serially("AT+CIPSEND=4,45\r\n");
  45   1      
  46   1        delay(300);
  47   1        Send_String_Serially("GET /update?key=IK9YW4JECCXYE3QH&field1=109\r\n");
  48   1      
  49   1        while(1)              
  50   1        {
  51   2          
  52   2        }
  53   1      }
  54          /*---------------------------------------------------------------------------------
C51 COMPILER V9.57.0.0   UART_COM_8051                                                     03/27/2018 20:26:51 PAGE 2   

  55                             void Serial_Init()
  56           ----------------------------------------------------------------------------------
  57           I/P Arguments: none
  58           Return value : none
  59           description  : This function is used for Initialize serial communication
  60          -----------------------------------------------------------------------------------*/ 
  61          void Serial_Init(void)      
  62          {
  63   1        TMOD = 0x20;// Timer 1 in mode 2 auto reload mode for baudrate generation
  64   1        SCON = 0x50;// Serial Mode 1, 8-DATA bit 1-Start Bit, 1-Stop Bit, Receive Enable
  65   1        TH1 = 0xFD;// Load value for 9600 baudrate
  66   1        TR1 = 1;// Start Timer
  67   1      }
  68          /*---------------------------------------------------------------------------------
  69                             void Send_Byte(unsigned char DATA)
  70           ----------------------------------------------------------------------------------
  71           I/P Arguments: character to be transmitt
  72           Return value : none
  73           description  : This function is used for Send byte Serially
  74          -----------------------------------------------------------------------------------*/ 
  75          void Send_Byte(unsigned char DATA)
  76          {
  77   1          SBUF = DATA;    //Load data into SBUF
  78   1          while(TI == 0); //Wait untill transmission to complete
  79   1          TI = 0;         //Clear transmitte interrupt(TI) flag 
  80   1      }
  81          /*---------------------------------------------------------------------------------
  82                             char Receive_Byte(void)
  83           ----------------------------------------------------------------------------------
  84           I/P Arguments: none
  85           Return value : ASCII Code of Received character
  86           description  : This function is used for Receive byte 
  87          -----------------------------------------------------------------------------------*/ 
  88          char Receive_Byte(void)
  89          {
  90   1          char Receive;
  91   1          while(RI == 0); //wait for character
  92   1          Receive = SBUF; //Read received data from SBUF
  93   1          RI=0;           //Clear Receive interrupt flag
  94   1          return Receive;
  95   1      } 
  96          /*---------------------------------------------------------------------------------
  97                             void Send_String_Serially(char String[])
  98           ----------------------------------------------------------------------------------
  99           I/P Arguments: String to be transmitted
 100           Return value : none
 101           description  : This function is used for Transmitte string 
 102          -----------------------------------------------------------------------------------*/ 
 103          void Send_String_Serially(char String[])
 104          {
 105   1        unsigned char count;
 106   1        for(count=0;String[count]!='\0';count++)//Send single byte one by one untill null character in string 
 107   1        Send_Byte(String[count]);
 108   1      }
 109          /*---------------------------------------------------------------------------------
 110                             void serial_ISR (void) interrupt 4
 111           ----------------------------------------------------------------------------------
 112           I/P Arguments: none
 113           Return value : none
 114           description  : This function is automatically call when data received and transmitte
 115          -----------------------------------------------------------------------------------*/ 
 116          void serial_ISR (void) interrupt 4 //Serial interrupt
C51 COMPILER V9.57.0.0   UART_COM_8051                                                     03/27/2018 20:26:51 PAGE 3   

 117          {
 118   1          //receive character
 119   1        char Receive;
 120   1        if(RI==1)
 121   1        {
 122   2          Receive = SBUF; //Read received data from SBUF
 123   2          RI = 0;//Clear Receive interrupt flag
 124   2          Send_Byte(Receive);//echo received character
 125   2        }
 126   1        
 127   1        P1 = Receive;//Display ASCII value of receive character at P1
 128   1        RI = 0;
 129   1      }       


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    269    ----
   CONSTANT SIZE    =    201    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
