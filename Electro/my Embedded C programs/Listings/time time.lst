C51 COMPILER V9.57.0.0   TIME_TIME                                                         03/05/2018 14:27:28 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE TIME_TIME
OBJECT MODULE PLACED IN .\Objects\time time.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Time\time time.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\time time.lst) TABS(2) OBJECT(.\Objects\time time.obj)

line level    source

   1          #include<reg51.h>
   2          #include<stdio.h>
   3          #define lcdport P2
   4          
   5          sbit rs=P0^2;
   6          sbit en=P0^4;
   7          
   8          sbit SDA=P0^1;                
   9          sbit SCL=P0^0;
  10          
  11          sbit next=P2^2;                     //increment digit
  12          sbit inc=P2^3;                     //increment value
  13          sbit set=P2^4;                     //set time 
  14          
  15          char ack;
  16          unsigned char day1=1;
  17          unsigned char k,x;
  18          unsigned int date=1, mon=1, hour=0, min=0, sec=0;  
  19          int year=0; 
  20          
  21           void delay(int itime)
  22          {
  23   1          int i,j;
  24   1          for(i=0;i<itime;i++)
  25   1          for(j=0;j<1275;j++);
  26   1      }
  27          
  28          void daten()
  29          {
  30   1          rs=1;
  31   1          en=1;
  32   1          delay(1);
  33   1          en=0;
  34   1      }
  35          
  36          void lcddata(unsigned char ch)
  37          {
  38   1          lcdport=ch & 0xf0;
  39   1          daten();
  40   1          lcdport=(ch<<4) & 0xf0;
  41   1          daten();
  42   1      }
  43          
  44          void cmden(void)
  45          {
  46   1          rs=0;
  47   1          en=1;
  48   1          delay(1);
  49   1          en=0;
  50   1      }
  51          
  52          void lcdcmd(unsigned char ch)
  53          {
  54   1          lcdport=ch & 0xf0;
C51 COMPILER V9.57.0.0   TIME_TIME                                                         03/05/2018 14:27:28 PAGE 2   

  55   1          cmden();
  56   1          lcdport=(ch<<4) & 0xf0;
  57   1          cmden();
  58   1      }
  59          
  60          void lcdprint(char *str)
  61          {
  62   1          while(*str)
  63   1          {
  64   2              lcddata(*str);
  65   2              str++;
  66   2          }
  67   1      }
  68          
  69          void lcd_init(void)
  70          {
  71   1          lcdcmd(0x02);
  72   1          lcdcmd(0x28);
  73   1          lcdcmd(0x0c);
  74   1          lcdcmd(0x01);
  75   1      }
  76          
  77          void I2CStart(){SDA=1;SCL=1,SDA=0,SCL=0;}             //"start" function for communicate with ds1307 RTC
  78          void I2CStop(){SDA=0,SCL=1,SDA=1;}                     //"stop" function for communicate wit ds1307 RTC
  79           
  80          unsigned char I2CSend(unsigned char Data)             //send data to ds1307 
  81          {
  82   1      char i;
  83   1      char ack_bit;
  84   1      for(i=0;i<8;i++)
  85   1      {
  86   2      if(Data & 0x80) SDA=1;
  87   2      else SDA=0;
  88   2      SCL=1;
  89   2      Data<<=1;
  90   2      SCL=0;
  91   2      }
  92   1      SDA=1,SCL=1;
  93   1      ack_bit=SDA;
  94   1      SCL=0;
  95   1      return ack_bit;
  96   1      }
  97           
  98          unsigned char I2CRead(char ack)                      //receive data from ds1307
  99          {
 100   1      unsigned char i, Data=0;
 101   1      SDA=1;
 102   1      for(i=0;i<8;i++)
 103   1      {
 104   2       Data<<=1;
 105   2       do{SCL=1;}
 106   2       while(SCL==0);
 107   2       if(SDA) Data|=1;
 108   2       SCL=0;
 109   2      }
 110   1      if(ack)SDA=0;
 111   1      else SDA=1;
 112   1      SCL=1;
 113   1      SCL=0;
 114   1      SDA=1;
 115   1      return Data;
 116   1      }
C51 COMPILER V9.57.0.0   TIME_TIME                                                         03/05/2018 14:27:28 PAGE 3   

 117          
 118          /*void day(char d)                                // Function for display day on LCD
 119          {
 120          switch(d)
 121          {
 122            case 0:
 123            lcdprint("DAY");
 124            break;
 125          
 126            case 1:
 127            lcdprint("SUN");
 128            break;
 129          
 130            case 2:
 131            lcdprint("MON");
 132            break;
 133          
 134            case 3:
 135            lcdprint("TUE");
 136            break;
 137          
 138            case 4:
 139            lcdprint("WED");
 140            break;
 141          
 142            case 5:
 143            lcdprint("THU");
 144            break;
 145          
 146            case 6:
 147            lcdprint("FRI");
 148            break;
 149          
 150            case 7:
 151            lcdprint("SAT");
 152            break;
 153           }
 154           }     */
 155          
 156          int BCDToDecimal(char bcdByte)
 157          {
 158   1             char a,b,dec;
 159   1          a=(((bcdByte & 0xF0) >> 4) * 10);
 160   1          b=(bcdByte & 0x0F);
 161   1          dec=a+b;
 162   1          return dec;
 163   1      }
 164          
 165          char DecimalToBCD (int decimalByte)
 166          {
 167   1        char a,b,bcd;
 168   1        a=((decimalByte / 10) << 4);
 169   1        b= (decimalByte % 10);
 170   1        bcd=a|b;
 171   1        return bcd;
 172   1      }
 173          
 174           
 175          
 176           void show_time()                            //function to display time/date/day on LCD
 177          {
 178   1        char var[5];
C51 COMPILER V9.57.0.0   TIME_TIME                                                         03/05/2018 14:27:28 PAGE 4   

 179   1        lcdcmd(0x80);
 180   1        lcdprint("Date:");
 181   1        sprintf(var,"%d",date);
 182   1        lcdprint(var);
 183   1        sprintf(var,"/%d",mon);
 184   1        lcdprint(var);
 185   1        sprintf(var,"/%d",year+2000);
 186   1        lcdprint(var);
 187   1        lcdprint("   ");
 188   1        lcdcmd(0xc0);
 189   1        lcdprint("Time:");
 190   1        sprintf(var,"%d",hour);
 191   1        lcdprint(var);
 192   1        sprintf(var,":%d",min);
 193   1        lcdprint(var);
 194   1        sprintf(var,":%d",sec);
 195   1        lcdprint(var);
 196   1        lcdprint(" ");
 197   1        // day(day1);
 198   1         lcdprint("   ");
 199   1       }
 200          
 201           void set_time()                                            //time set function
 202          {
 203   1       lcdcmd(0x0e);
 204   1       while(k<7)
 205   1       {
 206   2        while(k==3)                                            //set date
 207   2        {
 208   3         x=year%4;
 209   3         if(inc==0)
 210   3         {date++;while(inc==0);
 211   4         if(x==1 && mon==2 && date==28){date=1;}                //check for 28 day febuary
 212   4         if(x==0 && mon==2 && date==29){date=1;}                //check for 29 day febuary
 213   4         if((date==31) && (mon==4) || (mon==6) || (mon==9) || (mon==17)){date=1;}        // check for 30 day mon
             -th
 214   4         if(date==32){date=1;}                                                        // check for 31 day month
 215   4         show_time();}
 216   3         if(next==0)
 217   3         {
 218   4           k=5;
 219   4           
 220   4           while(next==0);
 221   4           }                                                //check for next digit
 222   3         lcdcmd(0x85);
 223   3        }             
 224   2      
 225   2        while(k==2)                                            //set month
 226   2        {
 227   3         if(inc==0)
 228   3         {mon++;while(inc==0);
 229   4         if(mon==13){mon=1;}                                  //check for end of year
 230   4         show_time(); }
 231   3         if(next==0){k=3;
 232   4         while(next==0);
 233   4      
 234   4         }
 235   3         lcdcmd(0x88);
 236   3        }
 237   2      
 238   2        while(k==1)                                         //set year
 239   2        {
C51 COMPILER V9.57.0.0   TIME_TIME                                                         03/05/2018 14:27:28 PAGE 5   

 240   3         if(inc==0)
 241   3         {year++;while(inc==0);  
 242   4         if(year==30){year=0;}                            
 243   4         show_time();     }
 244   3         if(next==0){k=2;
 245   4      
 246   4         while(next==0);}
 247   3         lcdcmd(0x8d);
 248   3        }
 249   2      
 250   2        while(k==5)                                      //set hour
 251   2        {
 252   3         if(inc==0)
 253   3         {hour++;while(inc==0);
 254   4         if(hour==24){hour=0;}
 255   4         show_time();}
 256   3         if(next==0){k=6;
 257   4         while(next==0);}
 258   3         lcdcmd(0xc5);
 259   3        }
 260   2      
 261   2        while(k==6)                                       //set min
 262   2        {
 263   3         if(inc==0)
 264   3         {min++;while(inc==0);
 265   4         if(min==60){min=0;}
 266   4         show_time();}
 267   3         if(next==0){k=10;
 268   4         while(next==0);}
 269   3         lcdcmd(0xc8);
 270   3        }
 271   2       }
 272   1      } 
 273          
 274          void main()
 275          {
 276   1          lcd_init();
 277   1          lcdprint("Digital Clock");
 278   1          lcdcmd(0xc0);
 279   1          lcdprint(" Using 8051  ");
 280   1          delay(400);
 281   1          lcdcmd(1); 
 282   1          lcdprint("Circuit Digest");
 283   1          lcdcmd(192);
 284   1          lcdprint("Sreeram maram");
 285   1          delay(400);
 286   1          while(1)
 287   1       {
 288   2       if(set==0)                                     // check time set button press
 289   2       {
 290   3       I2CStart();
 291   3       I2CSend(0xD0);
 292   3       I2CSend(0x00);
 293   3       I2CSend(0x00);
 294   3       I2CSend(0x00);
 295   3       I2CSend(0x00);
 296   3       I2CSend(0x01);
 297   3       I2CSend(0x01);
 298   3       I2CSend(0x01);
 299   3       I2CSend(0x00);    
 300   3       I2CSend(0x80);    
 301   3       I2CStop();
C51 COMPILER V9.57.0.0   TIME_TIME                                                         03/05/2018 14:27:28 PAGE 6   

 302   3        k=1;
 303   3        set_time();                     // call time set function
 304   3           min=DecimalToBCD(min);
 305   3         sec=DecimalToBCD(0);
 306   3            hour=DecimalToBCD(hour);
 307   3            year=DecimalToBCD(year);
 308   3            mon=DecimalToBCD(mon);
 309   3         date=DecimalToBCD(date);                                    
 310   3        I2CStart();
 311   3        I2CSend(0xD0);
 312   3        I2CSend(0x00);
 313   3        I2CSend(0x00);
 314   3        I2CSend(min);
 315   3        I2CSend(hour);
 316   3        I2CSend(day1);
 317   3        I2CSend(date);
 318   3        I2CSend(mon);
 319   3        I2CSend(year);    
 320   3        I2CSend(0x80);    
 321   3        I2CStop(); 
 322   3        lcdcmd(1);
 323   3        lcdcmd(0x0c);
 324   3        }
 325   2      
 326   2        I2CStart();
 327   2        I2CSend(0xD0);
 328   2        I2CSend(0x00);
 329   2        I2CStart();
 330   2        I2CSend(0xD1);
 331   2        sec=BCDToDecimal(I2CRead(1));
 332   2        min=BCDToDecimal(I2CRead(1));
 333   2        hour=BCDToDecimal(I2CRead(1));
 334   2        day1=BCDToDecimal(I2CRead(1));
 335   2        date=BCDToDecimal(I2CRead(1));
 336   2        mon=BCDToDecimal(I2CRead(1));
 337   2        year=BCDToDecimal(I2CRead(1));
 338   2        I2CStop();
 339   2         show_time();                                           //display time/date/day 
 340   2         delay(1);
 341   2       }
 342   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1284    ----
   CONSTANT SIZE    =     86    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
